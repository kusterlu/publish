library(readr)
FB_Demograph <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/Daten/FB-Demograph.csv")
View(FB_Demograph)
View(FB_Demograph)
View(FB_Demograph)
View(FB_Demograph)
library(readr)
FB_Demograph <- read_delim("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/Daten/FB-Demograph.csv",
";", escape_double = FALSE, trim_ws = TRUE)
View(FB_Demograph)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/Daten/InteractionDataStudie01.Rda")
View(data.experiment.interactions)
View(data.experiment.interactions)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/r practice/AggregatedFeaturesPerSessionStudie01_alt.Rda")
View(data.features.aggregated)
View(data.experiment.interactions)
library(readr)
spell_pflegetab <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/Daten/pflegetab-exports/spell_pflegetab.csv")
View(spell_pflegetab)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/r practice/AggregatedFeaturesPerSessionStudie01_alt.Rda")
View(data.features.aggregated)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/big5 analyse/Big5all.Rda")
View(work)
library(readr)
data <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/data.csv")
View(data)
View(data.features.aggregated)
attributes(data)
library(readr)
data <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/data.csv")
View(data)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/AggregatedFeaturesPerSession_cleaned.Rda")
View(data.features.aggregated)
attributes(data.features.aggregated)
View(data)
attributes(data)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/big5 analyse/Big5all.Rda")
View(work)
men <- work[which(work$Gender=="M"),]
fem <- work[which(work$Gender=="F"),]
men-mean <- mean(men)
attributes(men)
men-mean <- mean(men[-c(1,7,8)])
str(work)
men-mean <- mean(men[-c(1,7,8),])
men-mean <- mean(men[c(2,3,4,5,6),])
men[c(2,3,4,5,6)]
men <- work[which(work$Gender=="M"),]
men <- men[c(2,3,4,5,6)]
men <- work[which(work$Gender=="M"),]
men <- men[c(2,3,4,5,6)]
fem <- work[which(work$Gender=="F"),]
fem <- fem[c(2,3,4,5,6)]
colMeans(men)
colMeans(fem)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/big5 analyse/Big5all.Rda")
View(work)
colMeans(work[,c(2,3,4,5,6)])
library(readr)
predicted_values <- read_delim("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/SPSS/predicted_values.CSV",
";", escape_double = FALSE, trim_ws = TRUE)
View(predicted_values)
library(readr)
data_aggregated <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/data_aggregated.csv")
View(data_aggregated)
rm(data_aggregated)
load("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/data_aggregated_ready.Rda")
colnames(predicted_values) <- c("extra_predicted", "neuro_predicted", "open_predicted", "agree_predicted", "con_predicted")
attributes(sdf)
lot <- cbind(predicted_values, sdf[52:56])
View(lot)
plot(lot$extra_predicted, lot$extra)
library(ggplot2)
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=FALSE)    # Don't add shaded confidence region
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)    # Don't add shaded confidence region
+ labs(x="Predicted", y=expression("Observed"), title="Extraversion (ALM)")
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)    # Don't add shaded confidence region
+ labs(x="Predicted", y=expression("Observed"), title="Extraversion (ALM)")
+ labs(x="Predicted", y="Observed", title="Extraversion (ALM)")
+ labs(x="Predicted", y="Observed"), title="Extraversion (ALM)")
+ labs(x="Predicted", y="Observed")
g+labs(x="Date", y=expression(paste("Temperature ( ", degree ~ F, " )")), title="Temperature")
+labs(x="Date", y=expression(paste("Temperature ( ", degree ~ F, " )")), title="Temperature")
+ labs(x="Predicted", y="Observed", title="Extraversion (ALM)")
+ labs(x="Predicted", y="Observed", title="Extraversion (ALM)")
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)")
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(0,48))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,40))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,40))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(17.5,40)) + ylim(c(15,40))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(17.5,40)) + ylim(c(17.5,40))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,40))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,45)) + ylim(c(15,45))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,45)) + ylim(c(15,45)) + coord_equal()
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,41)) + ylim(c(15,41)) + coord_equal()
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,38)) + ylim(c(15,41)) + coord_equal()
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal()
zusammen <- as.data.frame(matrix(NA,  nrow=5,  ncol=2))
colnames(zusammen) <- c("ex","why")
lin <- as.data.frame(matrix(NA,  nrow=5,  ncol=2))
colnames(lin) <- c("ex","why")
a <- c(15,20,25,30,35,40)
a <- b(15,20,25,30,35,40)
lin <- cbind(a,b)
a <- c(15,20,25,30,35,40)
b <- c(15,20,25,30,35,40)
lin <- cbind(a,b)
colnames(lin) <- c("ex","why")
a <- c(15,20,25,30,35,40)
b <- c(15,20,25,30,35,40)
lin <- as.data.frame(cbind(a,b))
colnames(lin) <- c("ex","why")
View(lin)
+ geom_line(data = lin, aes(x=ex, y=why))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x="Predicted", y="Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why))
cor(extra_predicted,y=lot$extra )
cor(lot$extra_predicted,y=lot$extra )
summary(cor(lot$extra_predicted,y=lot$extra))
k <- cor(lot$extra_predicted,y=lot$extra)
k <- round(cor(lot$extra_predicted,y=lot$extra),2)
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("Predicted - Correlation (Pearson) :",round(cor(lot$extra_predicted,y=lot$extra),2)), y="Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="y:Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why))
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="y:Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 5, linetype = dashed)
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="y:Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 5, linetype = "dashed")
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="y:Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 1, linetype = "dashed")
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="y:Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=neuro_predicted, y=lot$neuro)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$neuro_predicted,y=lot$neuro),2)), y="y:Observed", title="Neuroticism (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=neuro_predicted, y=lot$neuro)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$neuro_predicted,y=lot$neuro),2)), y="y:Observed", title="Neuroticism (ALM)") +
xlim(c(5,40)) + ylim(c(5,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=neuro_predicted, y=lot$neuro)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$neuro_predicted,y=lot$neuro),2)), y="y:Observed", title="Neuroticism (ALM)") +
xlim(c(0,40)) + ylim(c(0,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=neuro_predicted, y=lot$neuro)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$neuro_predicted,y=lot$neuro),2)), y="y:Observed", title="Neuroticism (ALM)") +
xlim(c(0,40)) + ylim(c(0,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
a <- c(5,10,15,20,25,30,35,40)
b <- c(5,10,15,20,25,30,35,40)
lin <- as.data.frame(cbind(a,b))
colnames(lin) <- c("ex","why")
ggplot(lot, aes(x=neuro_predicted, y=lot$neuro)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$neuro_predicted,y=lot$neuro),2)), y="y:Observed", title="Neuroticism (ALM)") +
xlim(c(0,40)) + ylim(c(0,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=agree_predicted, y=lot$agree)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$agree_predicted,y=lot$agree),2)), y="y:Observed", title="Agreeableness (ALM)") +
xlim(c(0,40)) + ylim(c(0,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=agree_predicted, y=lot$agree)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$agree_predicted,y=lot$agree),2)), y="y:Observed", title="Agreeableness (ALM)") +
xlim(c(20,40)) + ylim(c(20,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=agree_predicted, y=lot$agree)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$agree_predicted,y=lot$agree),2)), y="y:Observed", title="Agreeableness (ALM)") +
xlim(c(20,40)) + ylim(c(20,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=neuro_predicted, y=lot$neuro)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$neuro_predicted,y=lot$neuro),2)), y="y:Observed", title="Neuroticism (ALM)") +
xlim(c(0,40)) + ylim(c(0,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
a <- c(0, 5,10,15,20,25,30,35,40)
b <- c(0, 5,10,15,20,25,30,35,40)
lin <- as.data.frame(cbind(a,b))
colnames(lin) <- c("ex","why")
ggplot(lot, aes(x=neuro_predicted, y=lot$neuro)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$neuro_predicted,y=lot$neuro),2)), y="y:Observed", title="Neuroticism (ALM)") +
xlim(c(0,40)) + ylim(c(0,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)  +  # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="y:Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=extra_predicted, y=lot$extra)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$extra_predicted,y=lot$extra),2)), y="y:Observed", title="Extraversion (ALM)") +
xlim(c(15,40)) + ylim(c(15,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=con_predicted, y=lot$con)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$con_predicted,y=lot$con),2)), y="y:Observed", title="Conscientiousness (ALM)") +
xlim(c(20,40)) + ylim(c(20,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=con_predicted, y=lot$con)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$con_predicted,y=lot$con),2)), y="y:Observed", title="Conscientiousness (ALM)") +
xlim(c(0,40)) + ylim(c(0,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=con_predicted, y=lot$con)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$con_predicted,y=lot$con),2)), y="y:Observed", title="Conscientiousness (ALM)") +
xlim(c(25,40)) + ylim(c(25,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=open_predicted, y=lot$open)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$open_predicted,y=lot$open),2)), y="y:Observed", title="Openess (ALM)") +
xlim(c(5,40)) + ylim(c(5,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=open_predicted, y=lot$open)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$open_predicted,y=lot$open),2)), y="y:Observed", title="Openess (ALM)") +
xlim(c(20,40)) + ylim(c(20,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=open_predicted, y=lot$open)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE)    # Don't add shaded confidence region
ggplot(lot, aes(x=open_predicted, y=lot$open)) +
geom_point(shape=1) +    # Use hollow circles
geom_smooth(method=lm,   # Add linear regression line
se=TRUE) +    # Don't add shaded confidence region
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$open_predicted,y=lot$open),2)), y="y:Observed", title="Openess (ALM)") +
xlim(c(20,40)) + ylim(c(20,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
ggplot(lot, aes(x=open_predicted, y=lot$open)) +
geom_point(shape=1) +    # Use hollow circles
labs(x=paste("x:Predicted; Correlation=",round(cor(lot$open_predicted,y=lot$open),2)), y="y:Observed", title="Openess (ALM)") +
xlim(c(20,40)) + ylim(c(20,41)) + coord_equal() +
geom_line(data = lin, aes(x=ex, y=why),col = 2, linetype = "dashed")
demo <- read.csv("FB-Demograph.csv", header = TRUE, sep=";")
setwd("C:/Users/Asus/Desktop/personalityTraits/Studie1")
demo <- read.csv("FB-Demograph.csv", header = TRUE, sep=";")
colnames(demo)[42] <- "neuro"
colnames(demo)[43] <- "extra"
colnames(demo)[44] <- "open"
colnames(demo)[45] <- "agree"
colnames(demo)[46] <- "con"
demo$neuro <- as.integer(demo$neuro)
demo$extra <- as.integer(demo$extra)
demo$open <- as.integer(demo$open)
demo$agree <- as.integer(demo$agree)
demo$con <- as.integer(demo$con)
ge <- demo[,c(1,6)]
View(ge)
load("InteractionDataStudie01.Rda")
setwd("C:/Users/Asus/Desktop/personalityTraits/Studie2")
load(InteractionDataStudie01.Rda)
load("C:/Users/Asus/Desktop/personalityTraits/Studie2/AggregatedFeaturesPerSession_cleaned.Rda")
View(data.features.aggregated)
load("C:/Users/Asus/Desktop/personalityTraits/Studie2/InteractionDataStudie01.Rda")
times <- data.experiment.interactions[1:543,c("sessionNr", "sessionDuration","user_id")]
View(times)
a <- NULL
session.start <- 0
session.stop <- 0
for (i in 1:543) {
a <- data.experiment.interactions[data.experiment.interactions$sessionNr==i,]
session.start <- a$timestamp[1]
session.stop <- a$timestamp[length(a$timestamp)]
times$sessionDuration[i] <- difftime(session.stop, session.start, units="secs")
times$sessionNr[i] <- i
times$user_id[i] <- a$user_id[1]
}
View(times)
times <- times[!times$user_id==216,]
times$sessionDuration[times$sessionNr==360] <- times$sessionDuration[times$sessionNr==360] + times$sessionDuration[times$sessionNr==361]
times$sessionDuration[times$sessionNr==363] <- times$sessionDuration[times$sessionNr==363] + times$sessionDuration[times$sessionNr==364]
times$sessionDuration[times$sessionNr==537] <- times$sessionDuration[times$sessionNr==537] + times$sessionDuration[times$sessionNr==538]
times$sessionDuration[times$sessionNr==495] <- times$sessionDuration[times$sessionNr==495] + times$sessionDuration[times$sessionNr==496]
times <- times[!(times$sessionNr %in% c(361,364,538,496)),]
colnames(times)[1] <- "SessionNr"
data.features.aggregated <- merge(data.features.aggregated, times, by="SessionNr")
load("C:/Users/Asus/Desktop/personalityTraits/Studie2/AggregatedFeaturesPerSession_cleaned.Rda")
load("C:/Users/Asus/Desktop/personalityTraits/Studie2/InteractionDataStudie01.Rda")
times <- data.experiment.interactions[1:543,c("sessionNr", "sessionDuration","user_id")]
a <- NULL
session.start <- 0
session.stop <- 0
for (i in 1:543) {
a <- data.experiment.interactions[data.experiment.interactions$sessionNr==i,]
session.start <- a$timestamp[1]
session.stop <- a$timestamp[length(a$timestamp)]
times$sessionDuration[i] <- difftime(session.stop, session.start, units="secs")
times$sessionNr[i] <- i
times$user_id[i] <- a$user_id[1]
}
times <- times[!times$user_id==216,]
times$sessionDuration[times$sessionNr==360] <- times$sessionDuration[times$sessionNr==360] + times$sessionDuration[times$sessionNr==361]
times$sessionDuration[times$sessionNr==363] <- times$sessionDuration[times$sessionNr==363] + times$sessionDuration[times$sessionNr==364]
times$sessionDuration[times$sessionNr==537] <- times$sessionDuration[times$sessionNr==537] + times$sessionDuration[times$sessionNr==538]
times$sessionDuration[times$sessionNr==495] <- times$sessionDuration[times$sessionNr==495] + times$sessionDuration[times$sessionNr==496]
times <- times[!(times$sessionNr %in% c(361,364,538,496)),]
colnames(times)[1] <- "SessionNr"
data.features.aggregated <- merge(data.features.aggregated, times, by="SessionNr")
library(readr)
AG_Carola_Daten <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/AG_Carola_Daten.csv")
View(AG_Carola_Daten)
library(readr)
AG <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/AG.csv")
View(AG)
View(AG)
library(readr)
AG_Carola_Daten <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/AG_Carola_Daten.csv")
View(AG_Carola_Daten)
temp <- data.features.aggregated[80:120]
temp <- data.features.aggregated[80:112]
View(temp)
attributes(AG)
View(AG_Carola_Daten)
library(readr)
data <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/data.csv")
View(data)
a<- data
library(readr)
data_aggregated <- read_csv("C:/Users/Asus/tubcloud/Studium/J_SS17/Bachelor Arbeit/DatenAnalyse/data_aggregated.csv")
View(data_aggregated)
